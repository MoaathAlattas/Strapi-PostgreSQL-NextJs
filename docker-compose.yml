version: '3'

services:
  db:
    container_name: postgres
    image: postgres:12.2-alpine
    restart: always
    volumes:
      - shared_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}

  api:
    container_name: strapi
    image: strapi/strapi:3.0.0-beta.19.5-alpine
    environment:
      - VIRTUAL_HOST=api.${HOST}
      - NODE_ENV=${ENV}
      - DATABASE_CLIENT=${DATABASE_CLIENT}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - ${SERVER_APP_PATH}:/srv/app
    depends_on:
      - db

  web:
    container_name: nextjs
    image: node:12-alpine
    working_dir: /app/client/web
    volumes:
      - shared_volume:/app
    expose:
      - 3000
    environment:
      - VIRTUAL_HOST=${HOST}
      - NODE_ENV=${ENV}
    command: npm run dev

  nginx:
    container_name: nginx_proxy
    image: jwilder/nginx-proxy:alpine
    ports:
      - ${PORT}:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - api
      - web

volumes:
  shared_volume:
    driver: local
    driver_opts:
      type: none
      device: ${APP_PATH}
      o: bind