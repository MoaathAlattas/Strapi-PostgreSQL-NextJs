version: '3'

services:
  db:
    container_name: postgres
    image: postgres:12-alpine
    restart: always
    networks:
      main_network:
        aliases:
          - ${DATABASE_HOST}
    volumes:
      - db_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}

  api:
    container_name: api
    image: node:12-alpine
    working_dir: /app
    ports:
      - 9001:9001
    networks:
      main_network:
        aliases:
          - ${API_HOST}
    volumes:
      - main_volume:/app
    depends_on:
      - db
    command: yarn dev:api

  webapp:
    container_name: webapp
    image: node:12-alpine
    working_dir: /app
    ports:
      - 9002:9002
    networks:
      main_network:
        aliases:
          - ${WEBAPP_HOST}
    volumes:
      - main_volume:/app
    depends_on:
      - api
    command: yarn dev:webapp

  nginx:
    container_name: nginx
    image: nginx
    networks:
     - main_network
    volumes:
     - ./proxy.conf:/etc/nginx/proxy.conf
    ports:
     - ${PROXY_PORT}:80
    depends_on:
     - api
     - webapp
    environment:
      NGINX_HOST: ${PROXY_HOST}
      NGINX_PORT: ${PROXY_PORT}
      NGINX_WEBAPP_HOST: ${WEBAPP_HOST}
      NGINX_WEBAPP_PORT: ${WEBAPP_PORT}
      NGINX_API_HOST: ${API_HOST}
      NGINX_API_PORT: ${API_PORT}
    command: /bin/bash -c "envsubst < /etc/nginx/proxy.conf > /etc/nginx/nginx.conf && exec nginx -g 'daemon off;'"

volumes:
  db_volume: {}
  main_volume:
    driver: local
    driver_opts:
      type: none
      device: ${APP_ABS_PATH}
      o: bind

networks:
  main_network: